<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.player.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.player.pojo.User">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, email, phone, question, answer, role, create_time, update_time
  </sql>

    <insert id="addUser" parameterType="com.player.pojo.User">
        insert into happysc_user(id,username,password,email,phone,question,answer,role,create_time,update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},#{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(), now())
    </insert>

    <update id="updatePasswordByUsername" parameterType="map">
      UPDATE happysc_user SET password = #{newPassword},update_time = now()
      where username = #{username}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.player.pojo.User">
         update happysc_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.player.pojo.User">
        update happysc_user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null" >
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null" >
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


     <delete id="deleteUserById" parameterType="Integer">
        delete from happysc_user
    where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="checkUsername" resultType="int" parameterType="String">
      SELECT COUNT(1) FROM happysc_user WHERE username = #{username}
    </select>

    <select id="checkEmail" resultType="int" parameterType="String">
        select count(1) from happysc_user
    where email = #{email}
    </select>

    <select id="checkEmailByUserId" resultType="int" parameterType="map">
      SELECT COUNT(1) FROM happysc_user where email = #{email}
      and id !=#{userId}
    </select>


    <select id="checkAnswer" resultType="int" parameterType="map">
        SELECT count(1) FROM happysc_user WHERE username = #{username}
        and question = #{question}
        and answer = #{answer}
    </select>


    <select id="checkPassword" resultType="int" parameterType="map">
      SELECT count(1) FROM happysc_user WHERE id = #{userId} and password = #{password}
    </select>

    <select id="checkLogin" resultMap="BaseResultMap" parameterType="map">
        SELECT <include refid="Base_Column_List"></include> FROM happysc_user WHERE
        username = #{username} and password = #{password}
    </select>


    <select id="selectQuestionByUsername" resultType="String" parameterType="String">
        SELECT question FROM  happysc_user WHERE username = #{username}
    </select>


    <select id="selectById" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from happysc_user
        where id = #{id,jdbcType=INTEGER}
    </select>

</mapper>